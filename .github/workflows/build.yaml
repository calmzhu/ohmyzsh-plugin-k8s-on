# This is a basic workflow to help you get started with Actions

name: Build

concurrency:
  group: ${{ github.workflow }}@tag
  cancel-in-progress: true
# Controls when the workflow will run

on:
  push:
    tags:
      - "v*"
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      tagName:
        required: true
        description: TagName & ReleaseName to create
        type: string

permissions:
  contents: write
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          if [[ -z "${{ inputs.tagName }}" ]];then
            export GH_RELEASE_VERSION=${GITHUB_REF##*/}
          else
            export GH_RELEASE_VERSION="${{inputs.tagName}}"
          fi
          
          if [[ "$GH_RELEASE_VERSION" =~ "-" ]];then
            export is_prerelease=true
          else
            export is_prerelease=false
          fi
          
          export ZIP_NAME=bookmark-${GH_RELEASE_VERSION}.zip
          
          
          cp README.md bookmark
          zip -r $ZIP_NAME k8s-on/*
          # https://docs.github.com/en/rest/releases/releases?apiVersion=2022-11-28#create-a-release
          cat>_data.yaml<<EOF
          tag_name: ${GH_RELEASE_VERSION}
          prerelease: ${is_prerelease}
          make_latest: legacy
          EOF
          curl -L -s -X POST \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              ${GITHUB_API_URL}/repos/${GITHUB_REPOSITORY}/releases \
              -d $(yq -P -o json -I=0 _data.yaml) | tee output.json
          upload_url=`jq '.upload_url' output.json | grep -o 'https.*assets'`
          curl -L -s -X POST \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              -H "Content-Type: application/octet-stream" \
              "$upload_url?name=$ZIP_NAME" \
               --data-binary "@$ZIP_NAME"
